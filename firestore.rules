rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Función helper para verificar autenticación
    function isSignedIn() {
      return request.auth != null;
    }

    // Función helper para verificar si es administrador
    function isAdmin() {
      return isSignedIn() &&
             get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.rol == 'admin';
    }

    // Función helper para verificar si es vigilante
    function isVigilante() {
      return isSignedIn() &&
             (get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.rol == 'vigilante' ||
              get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.rol == 'admin');
    }

    // Función helper para verificar si es alcaldía
    function isAlcaldia() {
      return isSignedIn() &&
             get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.rol == 'alcaldia';
    }

    // Función helper para verificar si es el dueño del recurso
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Usuarios - Todos los usuarios autenticados pueden leer todos los usuarios
    // Los usuarios pueden crear/actualizar su propio documento (para migración)
    match /usuarios/{userId} {
      allow read: if isSignedIn();
      allow create, update: if isSignedIn() && request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    // Noticias - Todos pueden leer, solo admin puede escribir
    match /noticias/{noticiaId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Reservas - Usuarios pueden ver las suyas, admin ve todas
    match /reservas/{reservaId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isAdmin() || isOwner(resource.data.usuarioId);
    }

    // PQRS - Usuarios pueden ver las suyas y crear, admin ve todas
    match /pqrs/{pqrsId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isAdmin() || isOwner(resource.data.usuarioId);
      allow delete: if isAdmin();
    }

    // Pagos - Todos los usuarios autenticados pueden leer (filtrado en cliente), admin crea, usuarios actualizan estado
    match /pagos/{pagoId} {
      allow read: if isSignedIn();
      allow create, delete: if isAdmin();
      allow update: if isSignedIn(); // Permite que los usuarios marquen pagos como pagados
    }

    // Emprendimientos - Todos pueden leer, dueño y admin pueden escribir
    match /emprendimientos/{emprendimientoId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isAdmin() || isOwner(resource.data.usuarioId);
    }

    // Reseñas - Todos pueden leer, usuarios pueden crear
    match /resenas/{resenaId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isOwner(resource.data.usuarioId);
    }

    // Mensajes de Chat - Estructura plana con tipo de canal
    match /mensajes/{mensajeId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.usuarioId == request.auth.uid;
    }

    // Chat General - Todos pueden leer y escribir
    match /chats/general/mensajes/{mensajeId} {
      allow read, create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.usuarioId == request.auth.uid;
    }

    // Chat Admin - Residentes y vigilantes escriben, admin lee
    match /chats/admin/mensajes/{mensajeId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.usuarioId == request.auth.uid;
    }

    // Chat Vigilantes - Admin, residentes y vigilantes
    match /chats/vigilantes/mensajes/{mensajeId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.usuarioId == request.auth.uid;
    }

    // Chat Residentes - Admin y vigilantes pueden escribir
    match /chats/residentes/mensajes/{mensajeId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.usuarioId == request.auth.uid;
    }

    // Chats Individuales - Cualquier canal tipo "rol-individual"
    match /chats/{chatType}/mensajes/{mensajeId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.usuarioId == request.auth.uid;
    }

    // Chats Privados - Solo participantes
    match /chats/privados/{chatId}/mensajes/{mensajeId} {
      allow read, write: if isSignedIn();
    }

    // Vehículos Visitantes - Vigilantes y admin
    match /vehiculosVisitantes/{vehiculoId} {
      allow read: if isSignedIn();
      allow write: if isVigilante();
    }

    // Permisos - Usuarios crean, vigilantes aprueban
    match /permisos/{permisoId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isVigilante() || isOwner(resource.data.usuarioId);
      allow delete: if isAdmin();
    }

    // Encuestas - Todos leen, admin escribe
    match /encuestas/{encuestaId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Votos de encuestas - Solo crear
    match /encuestas/{encuestaId}/votos/{votoId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
    }

    // Paquetes - Usuarios ven los suyos, vigilantes ven todos y escriben
    match /paquetes/{paqueteId} {
      allow read: if isSignedIn();
      allow create: if isVigilante();
      allow update: if isVigilante() || (isSignedIn() && resource.data.usuarioId == request.auth.uid);
      allow delete: if isAdmin();
    }

    // Parqueaderos - Admin gestiona, usuarios ven el suyo
    match /parqueaderos/{parqueaderoId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Sorteo Parqueaderos - Admin escribe, todos leen
    match /sorteoParqueaderos/{sorteoId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Sorteos (historial completo) - Admin escribe, todos leen
    match /sorteos/{sorteoId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Apartamentos en Arriendo - Todos leen, dueño y admin escriben
    match /apartamentosArriendo/{apartamentoId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isAdmin() || isOwner(resource.data.usuarioId);
    }

    // Parqueaderos en Arriendo - Todos leen, dueño y admin escriben
    match /parqueaderosArriendo/{parqueaderoId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isAdmin() || isOwner(resource.data.usuarioId);
    }

    // Incidentes (Alcaldía) - Todos leen y reportan, Alcaldía y Admin pueden actualizar
    match /incidentes/{incidenteId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isAdmin() || isAlcaldia();
      allow delete: if isAdmin();
    }

    // Recibos de Parqueadero - Vigilantes crean, todos leen
    match /recibosParqueadero/{reciboId} {
      allow read: if isSignedIn();
      allow create: if isVigilante();
      allow update, delete: if isAdmin();
    }

    // Sesiones - Registro de inicios de sesión
    match /sesiones/{sesionId} {
      allow read: if isAdmin();
      allow create: if isSignedIn();
    }

    // Formularios - Admin crea, todos leen
    match /formularios/{formularioId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Respuestas de Formularios - Usuarios crean respuestas, admin lee todas
    match /respuestasFormulario/{respuestaId} {
      allow read: if isAdmin() || isOwner(resource.data.usuarioId);
      allow create: if isSignedIn();
      allow update, delete: if isAdmin();
    }

    // Eventos de Registro - Admin crea y gestiona, todos leen eventos activos
    match /eventosRegistro/{eventoId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }

    // Registros de Eventos - Usuarios crean sus registros, admin ve todos
    match /registrosEventos/{registroId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isAdmin() || isOwner(resource.data.usuarioId);
    }

    // Notificaciones - Todos pueden leer y crear, solo el destinatario puede marcar como leída
    match /notificaciones/{notificacionId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn(); // Permite marcar como leída
      allow delete: if isAdmin();
    }
  }
}
